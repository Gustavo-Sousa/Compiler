/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PUBLIC = 1;
  /** RegularExpression Id. */
  int STATIC = 2;
  /** RegularExpression Id. */
  int VOID = 3;
  /** RegularExpression Id. */
  int MAIN = 4;
  /** RegularExpression Id. */
  int CLASS = 5;
  /** RegularExpression Id. */
  int EXTENDS = 6;
  /** RegularExpression Id. */
  int PRINT = 7;
  /** RegularExpression Id. */
  int THIS = 8;
  /** RegularExpression Id. */
  int NEW = 9;
  /** RegularExpression Id. */
  int STRING = 10;
  /** RegularExpression Id. */
  int INT = 11;
  /** RegularExpression Id. */
  int RETURN = 12;
  /** RegularExpression Id. */
  int BOOLEAN = 13;
  /** RegularExpression Id. */
  int TRUE = 14;
  /** RegularExpression Id. */
  int FALSE = 15;
  /** RegularExpression Id. */
  int IF = 16;
  /** RegularExpression Id. */
  int ELSE = 17;
  /** RegularExpression Id. */
  int WHILE = 18;
  /** RegularExpression Id. */
  int LENGTH = 19;
  /** RegularExpression Id. */
  int LETTER = 20;
  /** RegularExpression Id. */
  int DIGIT = 21;
  /** RegularExpression Id. */
  int REAL = 22;
  /** RegularExpression Id. */
  int INTERGER = 23;
  /** RegularExpression Id. */
  int ID = 24;
  /** RegularExpression Id. */
  int INTERGER_LITERAL = 25;
  /** RegularExpression Id. */
  int OP = 26;
  /** RegularExpression Id. */
  int AND = 27;
  /** RegularExpression Id. */
  int OR = 28;
  /** RegularExpression Id. */
  int EQUAL = 29;
  /** RegularExpression Id. */
  int LESS_THEN = 30;
  /** RegularExpression Id. */
  int BIGGER_THEN = 31;
  /** RegularExpression Id. */
  int PLUS = 32;
  /** RegularExpression Id. */
  int MINUS = 33;
  /** RegularExpression Id. */
  int TIMES = 34;
  /** RegularExpression Id. */
  int BAR = 35;
  /** RegularExpression Id. */
  int LPAREN = 36;
  /** RegularExpression Id. */
  int RPAREN = 37;
  /** RegularExpression Id. */
  int LBRACE = 38;
  /** RegularExpression Id. */
  int RBRACE = 39;
  /** RegularExpression Id. */
  int RBRACE_INTER = 40;
  /** RegularExpression Id. */
  int LCOLCH = 41;
  /** RegularExpression Id. */
  int RCOLCH = 42;
  /** RegularExpression Id. */
  int BANG = 43;
  /** RegularExpression Id. */
  int DOT = 44;
  /** RegularExpression Id. */
  int COMMA = 45;
  /** RegularExpression Id. */
  int SEMI_COMMA = 46;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"class\"",
    "\"extends\"",
    "\"System.out.println\"",
    "\"this\"",
    "\"new\"",
    "\"String\"",
    "\"int\"",
    "\"return\"",
    "\"boolean\"",
    "\"true\"",
    "\"false\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"length\"",
    "<LETTER>",
    "<DIGIT>",
    "<REAL>",
    "<INTERGER>",
    "<ID>",
    "<INTERGER_LITERAL>",
    "<OP>",
    "\"&&\"",
    "\"||\"",
    "\"=\"",
    "\"<\"",
    "\">\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\")?\"",
    "\"[\"",
    "\"]\"",
    "\"!\"",
    "\".\"",
    "\",\"",
    "\";\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
  };

}
